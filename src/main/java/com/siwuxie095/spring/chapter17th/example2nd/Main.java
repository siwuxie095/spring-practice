package com.siwuxie095.spring.chapter17th.example2nd;

/**
 * @author Jiajing Li
 * @date 2021-03-21 11:20:51
 */
public class Main {

    /**
     * 异步消息简介
     *
     * 与之前介绍的远程调用机制以及 REST 接口类似，异步消息也是用于应用程序之间通信的。但是，在系统之间传递信息的
     * 方式上，它与其他机制有所不同。
     *
     * 像 RMI 和 Hessian/Burlap 这样的远程调用机制是同步的。当客户端调用远程方法时，客户端必须等到远程方法完成
     * 后，才能继续执行。即使远程方法不向客户端返回任何信息，客户端也要被阻塞直到服务完成。
     *
     * PS：如果通信是同步的，客户端必须等待服务完成。
     *
     * 消息则是异步发送的，客户端不需要等待服务处理消息，甚至不需要等待消息投递完成。客户端发送消息，然后继续执行，
     * 这是因为客户端假定服务最终可以收到并处理这条消息。
     *
     * PS：异步通信是一种不需要等待的通信形式。
     *
     * 相对于同步通信，异步通信具有多项优势，后续将会介绍这些优点。
     */
    public static void main(String[] args) {

    }

}
