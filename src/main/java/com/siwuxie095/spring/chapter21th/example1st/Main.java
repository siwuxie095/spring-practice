package com.siwuxie095.spring.chapter21th.example1st;

/**
 * @author Jiajing Li
 * @date 2021-04-02 08:14:00
 */
public class Main {

    /**
     * 借助 Spring Boot 简化 Spring 开发
     *
     * 在刚开始学习微积分课程的时候，学习了函数的导数。当时使用非常复杂的极限来计算函数的导数。即便函数非常简单，计算
     * 导数相关的工作依然像噩梦一样。
     *
     * 在布置完作业、建立完学习小组并考完试后，班上的大多数同学都能够完成这项任务了。但是它的单调无趣依然让人无法忍受。
     * 如果 "微积分（上）" 的课程就这样的话，那在 "微积分（下）" 中，又该有怎样恐怖的数学计算在等着呢？
     *
     * 然后，老师开了一个玩笑。通过使用一个简单的公式就能快速将导数计算出来（如果你学习过微积分的话，你应该能够明白说
     * 的是什么）。通过这种新技巧，在以前计算一个函数导数的时间内，能够计算出十多个函数的导数。
     *
     * 此时，一位同学向老师提出了一个问题，这也是每位同学所想的："您为什么不在第一天就教会这个公式呢？！"
     *
     * 老师这样解释，比较困难的那种方法能够帮助理解导数的含义、告诉同学们它的特性，并说这种方式有这样那样的好处。
     *
     * 现在，已经用了很大的篇幅介绍 Spring，不觉发现自己处在类似于微积分老师那样的位置。尽管 Spring 带来的主要益处
     * 就是简化 Java 开发，但这里将会介绍 Spring Boot 如何让这项任务变得更加简单。从 Spring 创建以来，Spring
     * Boot 大概是 Spring 领域中最令人兴奋的事情了。它在 Spring 之上，构建了全新的开发模型，移除了开发 Spring
     * 应用中很多单调乏味的内容。
     *
     * 这里首先整体上了解一下 Spring Boot，看它是如何简化 Spring 的。
     */
    public static void main(String[] args) {

    }

}
