package com.siwuxie095.spring.chapter15th.example1st;

/**
 * @author Jiajing Li
 * @date 2021-03-08 08:12:05
 */
public class Main {

    /**
     * 使用远程服务
     *
     * 想象一下，你被困在一个荒凉的小岛上，这听上去就像是一场梦境变成了现实。毕竟，谁不想在海滩上静静地独处，
     * 可以幸福地不顾外面世界的纷纷扰扰呢？
     *
     * 但是在一个荒岛上，不可能总是享受冰镇果汁朗姆酒和日光浴，就算能享受这样宁静的隐居生活，但是过不了多久
     * 就会感到饥饿、厌烦和孤独。在这样的时光里，只能以椰子和用叉子所捕的鱼为生。人终究还是需要食物、新的衣
     * 服以及其他供给。而且如果不能和其他人取得联系，不久后就只能和排球说话了。
     *
     * 开发者开发的很多应用就像被遗弃的荒岛。表面上看，它们好像能自给自足，但实际上，它们可能还需要和其他系
     * 统相互合作，这些系统既包括组织内部的也包括组织外部的。
     *
     * 例如，采购系统需要与厂商的供应链系统通信；公司的人力资源系统可能需要集成薪金系统；或者，薪金系统需要
     * 和打印、邮寄工资等外部系统进行通信。无论哪种情况，应用都需要和其他系统进行交互，远程访问它们的服务。
     *
     * 作为一个 Java 开发者，有多种可以使用的远程调用技术，包括：
     * （1）远程方法调用（Remote Method Invocation，RMI）；
     * （2）Caucho 的 Hessian 和 Burlap；
     * （3）Spring 基于 HTTP 的远程服务；
     * （4）使用 JAX-RPC 和 JAX-WS 的 Web Service。
     *
     * 不管选择哪种远程调用技术，Spring 为使用这几种不同的技术访问和创建远程服务都提供了广泛的支持。在这里，
     * 将学习 Spring 如何简化和完善这些远程调用服务。但首先，需要先简要了解一下远程调用是如何在 Spring 中
     * 工作的。
     */
    public static void main(String[] args) {

    }

}
